class Solution {
    public boolean exist(char[][] board, String word) {
        boolean ans = false;
        boolean[][] matrix = new boolean[board.length][board[0].length];
        for(int i=0; i<board.length; i++){
            for(int j=0; j<board[0].length; j++){
                int k = 0;
                if(board[i][j]==word.charAt(k)){
                    if(helper(board, word, k, i, j, matrix)){
                    return true;
                }
                }
            }
        }
        return ans;
    }
    public boolean helper(char[][] board, String word, int k, int r, int c, boolean[][] matrix){
        if(k==word.length()){
            return true;
        }
        if(r<0 || r>=board.length || c<0 || c>=board[0].length || matrix[r][c] || board[r][c]!=word.charAt(k)){
            return false;
        }
        matrix[r][c] = true;
        int[][] dir = {{-1, 0}, {1, 0}, {0, 1}, {0, -1}};
        for(int[] d: dir){
            if(helper(board, word, k+1, r+d[0], c+d[1], matrix)){
                return true;
            }
        }
        matrix[r][c] = false;
        return false;
    }
}
